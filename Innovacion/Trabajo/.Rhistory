# Codigo fuente basado en el post
# "http://analisisydecision.es/simulacion-estimacion-de-pi-con-el-metodo-montecarlo/"
# PARAMETROS DE ENTRADA
args <- commandArgs(trailingOnly = TRUE)
if (length(args)>=1){
NumeroDeTizazos=as.integer(args[1])
}else{
NumeroDeTizazos=10000
}
RadioCircunferencia=1
numeroDeVeces=10
# SCRIPT
options(echo=FALSE)
estimaciones<-vector('numeric')
for (i in 1:numeroDeVeces){
x=runif(NumeroDeTizazos ,-RadioCircunferencia,RadioCircunferencia)
y=runif(NumeroDeTizazos ,-RadioCircunferencia,RadioCircunferencia)
puntos=cbind(x,y)
simul=data.frame(puntos)
#simul$dist es la distancia de cada punto al origen de coordenadas
simul$dist=sqrt(x**2+y**2)
simul$dentro=as.factor((simul$dist<=RadioCircunferencia)*1)
#Estimacion de Pi
puntosTotales=nrow(simul)
puntosDentro=nrow(subset(simul,dentro=="1"))
porcentajeDentro=(puntosDentro/puntosTotales)*100
piEstimado=(porcentajeDentro/100)*4
estimaciones[i]=round(piEstimado,2)
# cat("Numero de tizazos a simular = ",NumeroDeTizazos, "\n")
# cat("Porcentaje de puntos dentro = ",porcentajeDentro,"%\n")
# cat("El valor estimado de PI es = ",piEstimado,"\n")
}
cat(numeroDeVeces, " simulaciones con ",NumeroDeTizazos," tizazos\n")
media=mean(estimaciones)
cat("El valor medio de PI es ",media,"\n")
mediana=median(estimaciones)
cat("Mediana ",mediana,"\n")
desviacion=std(estimaciones)
cat("desviacion ",desviacion,"\n")
estimaciones
# Codigo fuente basado en el post
# "http://analisisydecision.es/simulacion-estimacion-de-pi-con-el-metodo-montecarlo/"
# PARAMETROS DE ENTRADA
args <- commandArgs(trailingOnly = TRUE)
if (length(args)>=1){
NumeroDeTizazos=as.integer(args[1])
}else{
NumeroDeTizazos=10000
}
RadioCircunferencia=1
numeroDeVeces=10
# SCRIPT
options(echo=FALSE)
estimaciones<-vector('numeric')
for (i in 1:numeroDeVeces){
x=runif(NumeroDeTizazos ,-RadioCircunferencia,RadioCircunferencia)
y=runif(NumeroDeTizazos ,-RadioCircunferencia,RadioCircunferencia)
puntos=cbind(x,y)
simul=data.frame(puntos)
#simul$dist es la distancia de cada punto al origen de coordenadas
simul$dist=sqrt(x**2+y**2)
simul$dentro=as.factor((simul$dist<=RadioCircunferencia)*1)
#Estimacion de Pi
puntosTotales=nrow(simul)
puntosDentro=nrow(subset(simul,dentro=="1"))
porcentajeDentro=(puntosDentro/puntosTotales)*100
piEstimado=(porcentajeDentro/100)*4
estimaciones[i]=round(piEstimado,2)
# cat("Numero de tizazos a simular = ",NumeroDeTizazos, "\n")
# cat("Porcentaje de puntos dentro = ",porcentajeDentro,"%\n")
# cat("El valor estimado de PI es = ",piEstimado,"\n")
}
cat(numeroDeVeces, " simulaciones con ",NumeroDeTizazos," tizazos\n")
media=mean(estimaciones)
cat("El valor medio de PI es ",media,"\n")
mediana=median(estimaciones)
cat("Mediana ",mediana,"\n")
desviacion=sd(estimaciones)
cat("desviacion ",desviacion,"\n")
estimaciones
# Codigo fuente basado en el post
# "http://analisisydecision.es/simulacion-estimacion-de-pi-con-el-metodo-montecarlo/"
# PARAMETROS DE ENTRADA
args <- commandArgs(trailingOnly = TRUE)
if (length(args)>=1){
NumeroDeTizazos=as.integer(args[1])
}else{
NumeroDeTizazos=10000
}
RadioCircunferencia=1
numeroDeVeces=10
# SCRIPT
options(echo=FALSE)
estimaciones<-vector('numeric')
for (i in 1:numeroDeVeces){
x=runif(NumeroDeTizazos ,-RadioCircunferencia,RadioCircunferencia)
y=runif(NumeroDeTizazos ,-RadioCircunferencia,RadioCircunferencia)
puntos=cbind(x,y)
simul=data.frame(puntos)
#simul$dist es la distancia de cada punto al origen de coordenadas
simul$dist=sqrt(x**2+y**2)
simul$dentro=as.factor((simul$dist<=RadioCircunferencia)*1)
#Estimacion de Pi
puntosTotales=nrow(simul)
puntosDentro=nrow(subset(simul,dentro=="1"))
porcentajeDentro=(puntosDentro/puntosTotales)*100
piEstimado=(porcentajeDentro/100)*4
estimaciones[i]=round(piEstimado,2)
# cat("Numero de tizazos a simular = ",NumeroDeTizazos, "\n")
# cat("Porcentaje de puntos dentro = ",porcentajeDentro,"%\n")
# cat("El valor estimado de PI es = ",piEstimado,"\n")
}
cat(numeroDeVeces, " simulaciones con ",NumeroDeTizazos," tizazos\n")
media=mean(estimaciones)
cat("El valor medio de PI es ",media,"\n")
mediana=median(estimaciones)
cat("Mediana ",mediana,"\n")
desviacion=sd(estimaciones)
cat("desviacion ",desviacion,"\n")
normal=dnorm(estimaciones,media,desviacion)
# Codigo fuente basado en el post
# "http://analisisydecision.es/simulacion-estimacion-de-pi-con-el-metodo-montecarlo/"
# PARAMETROS DE ENTRADA
args <- commandArgs(trailingOnly = TRUE)
if (length(args)>=1){
NumeroDeTizazos=as.integer(args[1])
}else{
NumeroDeTizazos=10000
}
RadioCircunferencia=1
numeroDeVeces=10
# SCRIPT
options(echo=FALSE)
estimaciones<-vector('numeric')
for (i in 1:numeroDeVeces){
x=runif(NumeroDeTizazos ,-RadioCircunferencia,RadioCircunferencia)
y=runif(NumeroDeTizazos ,-RadioCircunferencia,RadioCircunferencia)
puntos=cbind(x,y)
simul=data.frame(puntos)
#simul$dist es la distancia de cada punto al origen de coordenadas
simul$dist=sqrt(x**2+y**2)
simul$dentro=as.factor((simul$dist<=RadioCircunferencia)*1)
#Estimacion de Pi
puntosTotales=nrow(simul)
puntosDentro=nrow(subset(simul,dentro=="1"))
porcentajeDentro=(puntosDentro/puntosTotales)*100
piEstimado=(porcentajeDentro/100)*4
estimaciones[i]=round(piEstimado,2)
# cat("Numero de tizazos a simular = ",NumeroDeTizazos, "\n")
# cat("Porcentaje de puntos dentro = ",porcentajeDentro,"%\n")
# cat("El valor estimado de PI es = ",piEstimado,"\n")
}
cat(numeroDeVeces, " simulaciones con ",NumeroDeTizazos," tizazos\n")
media=mean(estimaciones)
cat("El valor medio de PI es ",media,"\n")
mediana=median(estimaciones)
cat("Mediana ",mediana,"\n")
desviacion=sd(estimaciones)
cat("desviacion ",desviacion,"\n")
normal=dnorm(estimaciones,media,desviacion)
plot(normal)
# Codigo fuente basado en el post
# "http://analisisydecision.es/simulacion-estimacion-de-pi-con-el-metodo-montecarlo/"
# PARAMETROS DE ENTRADA
args <- commandArgs(trailingOnly = TRUE)
if (length(args)>=1){
NumeroDeTizazos=as.integer(args[1])
}else{
NumeroDeTizazos=10000
}
RadioCircunferencia=1
numeroDeVeces=10
# SCRIPT
options(echo=FALSE)
estimaciones<-vector('numeric')
for (i in 1:numeroDeVeces){
x=runif(NumeroDeTizazos ,-RadioCircunferencia,RadioCircunferencia)
y=runif(NumeroDeTizazos ,-RadioCircunferencia,RadioCircunferencia)
puntos=cbind(x,y)
simul=data.frame(puntos)
#simul$dist es la distancia de cada punto al origen de coordenadas
simul$dist=sqrt(x**2+y**2)
simul$dentro=as.factor((simul$dist<=RadioCircunferencia)*1)
#Estimacion de Pi
puntosTotales=nrow(simul)
puntosDentro=nrow(subset(simul,dentro=="1"))
porcentajeDentro=(puntosDentro/puntosTotales)*100
piEstimado=(porcentajeDentro/100)*4
estimaciones[i]=round(piEstimado,2)
# cat("Numero de tizazos a simular = ",NumeroDeTizazos, "\n")
# cat("Porcentaje de puntos dentro = ",porcentajeDentro,"%\n")
# cat("El valor estimado de PI es = ",piEstimado,"\n")
}
cat(numeroDeVeces, " simulaciones con ",NumeroDeTizazos," tizazos\n")
media=mean(estimaciones)
cat("El valor medio de PI es ",media,"\n")
mediana=median(estimaciones)
cat("Mediana ",mediana,"\n")
desviacion=sd(estimaciones)
cat("desviacion ",desviacion,"\n")
normal=dnorm(estimaciones,media,desviacion)
normal
plot(normal)
# Codigo fuente basado en el post
# "http://analisisydecision.es/simulacion-estimacion-de-pi-con-el-metodo-montecarlo/"
# PARAMETROS DE ENTRADA
args <- commandArgs(trailingOnly = TRUE)
if (length(args)>=1){
NumeroDeTizazos=as.integer(args[1])
}else{
NumeroDeTizazos=10000
}
RadioCircunferencia=1
numeroDeVeces=100
# SCRIPT
options(echo=FALSE)
estimaciones<-vector('numeric')
for (i in 1:numeroDeVeces){
x=runif(NumeroDeTizazos ,-RadioCircunferencia,RadioCircunferencia)
y=runif(NumeroDeTizazos ,-RadioCircunferencia,RadioCircunferencia)
puntos=cbind(x,y)
simul=data.frame(puntos)
#simul$dist es la distancia de cada punto al origen de coordenadas
simul$dist=sqrt(x**2+y**2)
simul$dentro=as.factor((simul$dist<=RadioCircunferencia)*1)
#Estimacion de Pi
puntosTotales=nrow(simul)
puntosDentro=nrow(subset(simul,dentro=="1"))
porcentajeDentro=(puntosDentro/puntosTotales)*100
piEstimado=(porcentajeDentro/100)*4
estimaciones[i]=round(piEstimado,2)
# cat("Numero de tizazos a simular = ",NumeroDeTizazos, "\n")
# cat("Porcentaje de puntos dentro = ",porcentajeDentro,"%\n")
# cat("El valor estimado de PI es = ",piEstimado,"\n")
}
cat(numeroDeVeces, " simulaciones con ",NumeroDeTizazos," tizazos\n")
media=mean(estimaciones)
cat("El valor medio de PI es ",media,"\n")
mediana=median(estimaciones)
cat("Mediana ",mediana,"\n")
# Codigo fuente basado en el post
# "http://analisisydecision.es/simulacion-estimacion-de-pi-con-el-metodo-montecarlo/"
# PARAMETROS DE ENTRADA
args <- commandArgs(trailingOnly = TRUE)
if (length(args)>=1){
NumeroDeTizazos=as.integer(args[1])
}else{
NumeroDeTizazos=10000
}
RadioCircunferencia=1
numeroDeVeces=100
# SCRIPT
options(echo=FALSE)
estimaciones<-vector('numeric')
for (i in 1:numeroDeVeces){
x=runif(NumeroDeTizazos ,-RadioCircunferencia,RadioCircunferencia)
y=runif(NumeroDeTizazos ,-RadioCircunferencia,RadioCircunferencia)
puntos=cbind(x,y)
simul=data.frame(puntos)
#simul$dist es la distancia de cada punto al origen de coordenadas
simul$dist=sqrt(x**2+y**2)
simul$dentro=as.factor((simul$dist<=RadioCircunferencia)*1)
#Estimacion de Pi
puntosTotales=nrow(simul)
puntosDentro=nrow(subset(simul,dentro=="1"))
porcentajeDentro=(puntosDentro/puntosTotales)*100
piEstimado=(porcentajeDentro/100)*4
estimaciones[i]=round(piEstimado,2)
# cat("Numero de tizazos a simular = ",NumeroDeTizazos, "\n")
# cat("Porcentaje de puntos dentro = ",porcentajeDentro,"%\n")
# cat("El valor estimado de PI es = ",piEstimado,"\n")
}
cat(numeroDeVeces, " simulaciones con ",NumeroDeTizazos," tizazos\n")
media=mean(estimaciones)
cat("El valor medio de PI es ",media,"\n")
mediana=median(estimaciones)
cat("Mediana ",mediana,"\n")
plot(rnorm(estimaciones))
# Codigo fuente basado en el post
# "http://analisisydecision.es/simulacion-estimacion-de-pi-con-el-metodo-montecarlo/"
# PARAMETROS DE ENTRADA
args <- commandArgs(trailingOnly = TRUE)
if (length(args)>=1){
NumeroDeTizazos=as.integer(args[1])
}else{
NumeroDeTizazos=10000
}
RadioCircunferencia=1
numeroDeVeces=100
# SCRIPT
options(echo=FALSE)
estimaciones<-vector('numeric')
for (i in 1:numeroDeVeces){
x=runif(NumeroDeTizazos ,-RadioCircunferencia,RadioCircunferencia)
y=runif(NumeroDeTizazos ,-RadioCircunferencia,RadioCircunferencia)
puntos=cbind(x,y)
simul=data.frame(puntos)
#simul$dist es la distancia de cada punto al origen de coordenadas
simul$dist=sqrt(x**2+y**2)
simul$dentro=as.factor((simul$dist<=RadioCircunferencia)*1)
#Estimacion de Pi
puntosTotales=nrow(simul)
puntosDentro=nrow(subset(simul,dentro=="1"))
porcentajeDentro=(puntosDentro/puntosTotales)*100
piEstimado=(porcentajeDentro/100)*4
estimaciones[i]=round(piEstimado,2)
# cat("Numero de tizazos a simular = ",NumeroDeTizazos, "\n")
# cat("Porcentaje de puntos dentro = ",porcentajeDentro,"%\n")
# cat("El valor estimado de PI es = ",piEstimado,"\n")
}
cat(numeroDeVeces, " simulaciones con ",NumeroDeTizazos," tizazos\n")
media=mean(estimaciones)
cat("El valor medio de PI es ",media,"\n")
mediana=median(estimaciones)
cat("Mediana ",mediana,"\n")
plot(rnorm(estimaciones))
estimaciones
# Codigo fuente basado en el post
# "http://analisisydecision.es/simulacion-estimacion-de-pi-con-el-metodo-montecarlo/"
# PARAMETROS DE ENTRADA
args <- commandArgs(trailingOnly = TRUE)
if (length(args)>=1){
NumeroDeTizazos=as.integer(args[1])
}else{
NumeroDeTizazos=10000
}
RadioCircunferencia=1
numeroDeVeces=100
# SCRIPT
options(echo=FALSE)
estimaciones<-vector('numeric')
for (i in 1:numeroDeVeces){
x=runif(NumeroDeTizazos ,-RadioCircunferencia,RadioCircunferencia)
y=runif(NumeroDeTizazos ,-RadioCircunferencia,RadioCircunferencia)
puntos=cbind(x,y)
simul=data.frame(puntos)
#simul$dist es la distancia de cada punto al origen de coordenadas
simul$dist=sqrt(x**2+y**2)
simul$dentro=as.factor((simul$dist<=RadioCircunferencia)*1)
#Estimacion de Pi
puntosTotales=nrow(simul)
puntosDentro=nrow(subset(simul,dentro=="1"))
porcentajeDentro=(puntosDentro/puntosTotales)*100
piEstimado=(porcentajeDentro/100)*4
estimaciones[i]=round(piEstimado,2)
# cat("Numero de tizazos a simular = ",NumeroDeTizazos, "\n")
# cat("Porcentaje de puntos dentro = ",porcentajeDentro,"%\n")
# cat("El valor estimado de PI es = ",piEstimado,"\n")
}
cat(numeroDeVeces, " simulaciones con ",NumeroDeTizazos," tizazos\n")
media=mean(estimaciones)
cat("El valor medio de PI es ",media,"\n")
mediana=median(estimaciones)
cat("Mediana ",mediana,"\n")
plot(estimaciones)
estimaciones
# Codigo fuente basado en el post
# "http://analisisydecision.es/simulacion-estimacion-de-pi-con-el-metodo-montecarlo/"
# PARAMETROS DE ENTRADA
args <- commandArgs(trailingOnly = TRUE)
if (length(args)>=1){
NumeroDeTizazos=as.integer(args[1])
}else{
NumeroDeTizazos=10000
}
RadioCircunferencia=1
numeroDeVeces=100
# SCRIPT
options(echo=FALSE)
estimaciones<-vector('numeric')
for (i in 1:numeroDeVeces){
x=runif(NumeroDeTizazos ,-RadioCircunferencia,RadioCircunferencia)
y=runif(NumeroDeTizazos ,-RadioCircunferencia,RadioCircunferencia)
puntos=cbind(x,y)
simul=data.frame(puntos)
#simul$dist es la distancia de cada punto al origen de coordenadas
simul$dist=sqrt(x**2+y**2)
simul$dentro=as.factor((simul$dist<=RadioCircunferencia)*1)
#Estimacion de Pi
puntosTotales=nrow(simul)
puntosDentro=nrow(subset(simul,dentro=="1"))
porcentajeDentro=(puntosDentro/puntosTotales)*100
piEstimado=(porcentajeDentro/100)*4
estimaciones[i]=round(piEstimado,2)
# cat("Numero de tizazos a simular = ",NumeroDeTizazos, "\n")
# cat("Porcentaje de puntos dentro = ",porcentajeDentro,"%\n")
# cat("El valor estimado de PI es = ",piEstimado,"\n")
}
cat(numeroDeVeces, " simulaciones con ",NumeroDeTizazos," tizazos\n")
media=mean(estimaciones)
cat("El valor medio de PI es ",media,"\n")
mediana=median(estimaciones)
cat("Mediana ",mediana,"\n")
hist(estimaciones,breaks = 10)
estimaciones
# Codigo fuente basado en el post
# "http://analisisydecision.es/simulacion-estimacion-de-pi-con-el-metodo-montecarlo/"
# PARAMETROS DE ENTRADA
args <- commandArgs(trailingOnly = TRUE)
if (length(args)>=1){
NumeroDeTizazos=as.integer(args[1])
}else{
NumeroDeTizazos=10000
}
RadioCircunferencia=1
numeroDeVeces=100
# SCRIPT
options(echo=FALSE)
estimaciones<-vector('numeric')
for (i in 1:numeroDeVeces){
x=runif(NumeroDeTizazos ,-RadioCircunferencia,RadioCircunferencia)
y=runif(NumeroDeTizazos ,-RadioCircunferencia,RadioCircunferencia)
puntos=cbind(x,y)
simul=data.frame(puntos)
#simul$dist es la distancia de cada punto al origen de coordenadas
simul$dist=sqrt(x**2+y**2)
simul$dentro=as.factor((simul$dist<=RadioCircunferencia)*1)
#Estimacion de Pi
puntosTotales=nrow(simul)
puntosDentro=nrow(subset(simul,dentro=="1"))
porcentajeDentro=(puntosDentro/puntosTotales)*100
piEstimado=(porcentajeDentro/100)*4
estimaciones[i]=round(piEstimado,2)
# cat("Numero de tizazos a simular = ",NumeroDeTizazos, "\n")
# cat("Porcentaje de puntos dentro = ",porcentajeDentro,"%\n")
# cat("El valor estimado de PI es = ",piEstimado,"\n")
}
cat(numeroDeVeces, " simulaciones con ",NumeroDeTizazos," tizazos\n")
media=mean(estimaciones)
cat("El valor medio de PI es ",media,"\n")
mediana=median(estimaciones)
cat("Mediana ",mediana,"\n")
hist(estimaciones,breaks = 100)
estimaciones
# Codigo fuente basado en el post
# "http://analisisydecision.es/simulacion-estimacion-de-pi-con-el-metodo-montecarlo/"
# PARAMETROS DE ENTRADA
args <- commandArgs(trailingOnly = TRUE)
if (length(args)>=1){
NumeroDeTizazos=as.integer(args[1])
}else{
NumeroDeTizazos=10000
}
RadioCircunferencia=1
numeroDeVeces=100
# SCRIPT
options(echo=FALSE)
estimaciones<-vector('numeric')
for (i in 1:numeroDeVeces){
x=runif(NumeroDeTizazos ,-RadioCircunferencia,RadioCircunferencia)
y=runif(NumeroDeTizazos ,-RadioCircunferencia,RadioCircunferencia)
puntos=cbind(x,y)
simul=data.frame(puntos)
#simul$dist es la distancia de cada punto al origen de coordenadas
simul$dist=sqrt(x**2+y**2)
simul$dentro=as.factor((simul$dist<=RadioCircunferencia)*1)
#Estimacion de Pi
puntosTotales=nrow(simul)
puntosDentro=nrow(subset(simul,dentro=="1"))
porcentajeDentro=(puntosDentro/puntosTotales)*100
piEstimado=(porcentajeDentro/100)*4
estimaciones[i]=round(piEstimado,2)
# cat("Numero de tizazos a simular = ",NumeroDeTizazos, "\n")
# cat("Porcentaje de puntos dentro = ",porcentajeDentro,"%\n")
# cat("El valor estimado de PI es = ",piEstimado,"\n")
}
cat(numeroDeVeces, " simulaciones con ",NumeroDeTizazos," tizazos\n")
media=mean(estimaciones)
cat("El valor medio de PI es ",media,"\n")
mediana=median(estimaciones)
cat("Mediana ",mediana,"\n")
hist(estimaciones,breaks = numeroDeVeces)
estimaciones
# Codigo fuente basado en el post
# "http://analisisydecision.es/simulacion-estimacion-de-pi-con-el-metodo-montecarlo/"
# PARAMETROS DE ENTRADA
args <- commandArgs(trailingOnly = TRUE)
if (length(args)>=1){
NumeroDeTizazos=as.integer(args[1])
}else{
NumeroDeTizazos=10000
}
RadioCircunferencia=1
numeroDeVeces=1000
# SCRIPT
options(echo=FALSE)
estimaciones<-vector('numeric')
for (i in 1:numeroDeVeces){
x=runif(NumeroDeTizazos ,-RadioCircunferencia,RadioCircunferencia)
y=runif(NumeroDeTizazos ,-RadioCircunferencia,RadioCircunferencia)
puntos=cbind(x,y)
simul=data.frame(puntos)
#simul$dist es la distancia de cada punto al origen de coordenadas
simul$dist=sqrt(x**2+y**2)
simul$dentro=as.factor((simul$dist<=RadioCircunferencia)*1)
#Estimacion de Pi
puntosTotales=nrow(simul)
puntosDentro=nrow(subset(simul,dentro=="1"))
porcentajeDentro=(puntosDentro/puntosTotales)*100
piEstimado=(porcentajeDentro/100)*4
estimaciones[i]=round(piEstimado,2)
# cat("Numero de tizazos a simular = ",NumeroDeTizazos, "\n")
# cat("Porcentaje de puntos dentro = ",porcentajeDentro,"%\n")
# cat("El valor estimado de PI es = ",piEstimado,"\n")
}
cat(numeroDeVeces, " simulaciones con ",NumeroDeTizazos," tizazos\n")
media=mean(estimaciones)
cat("El valor medio de PI es ",media,"\n")
mediana=median(estimaciones)
cat("Mediana ",mediana,"\n")
hist(estimaciones,breaks = numeroDeVeces)
estimaciones
